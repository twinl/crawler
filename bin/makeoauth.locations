#!/usr/bin/perl -w
# makeoauth: make oauth key
# usage: makeoauth
# 20130614 erikt(at)xs4all.nl

use lib "/home/cloud/lib/URI-1.60";

use strict;
use URI::Escape;
# documentation: http://perldoc.perl.org/Digest/SHA.html
use Digest::SHA qw(hmac_sha1 hmac_sha1_base64);

my $command = $0;
my $parametersFile = "/home/cloud/etc/locations";

# doc: https://dev.twitter.com/docs/auth/creating-signature ###################

# Collecting parameters

my $signature_base = "";

my $status = ""; # READ FROM FILE
if (not open(INFILE,$parametersFile)) {
   die "$command: cannot read $parametersFile\n";
}
$status = <INFILE>;
close(INFILE);
$status =~ s/.*=//;
$signature_base .= uri_escape("locations") .
        '=' .       
        uri_escape($status) .
        "&";

# we need this value for the curl call
my $data = "locations=".uri_escape($status);

#my $include_entities = "true";
#$signature_base .= uri_escape("include_entities") .
#                   '=' .
#                   uri_escape($include_entities) .
#                   '&';

use lib "/home/cloud/bin";
use makeoauth_locations_keys;
package main;

my $consumer_key = $makeoauth_locations_keys::consumer_key;
my $consumer_secret = $makeoauth_locations_keys::consumer_secret;
my $token = $makeoauth_locations_keys::token;
my $oauth_token_secret = $makeoauth_locations_keys::oauth_token_secret;

$signature_base .= uri_escape("oauth_consumer_key") . 
                   '=' . 
                   uri_escape($consumer_key) .
                   '&';

# generate random string
my $nonce = "";
for (my $i=0;$i<32;$i++) {
   my $r = int(rand(62));
   if ($r<10) { $r += 48; }
   elsif ($r<36) { $r += 55; }
   else { $r += 61; }
   $nonce .= chr($r);
}
$signature_base .= uri_escape("oauth_nonce") .
        '=' . 
        uri_escape($nonce) .
        '&';

my $signature_method = "HMAC-SHA1";
$signature_base .= uri_escape("oauth_signature_method") .
        '=' .       
        uri_escape($signature_method) .
        '&';

my $timestamp = time();
$signature_base .= uri_escape("oauth_timestamp") .
        '=' .     
        uri_escape($timestamp) .
        '&';

$signature_base .= uri_escape("oauth_token") .
        '=' .     
        uri_escape($token) .
        '&';

my $version = "1.0";
$signature_base .= uri_escape("oauth_version") . 
        '=' .     
        uri_escape($version);

# Creating the signature string

my $http_method = "POST";
my $base_url = "https://stream.twitter.com/1.1/statuses/filter.json";

$signature_base = $http_method . "&" . uri_escape($base_url) . "&" . uri_escape($signature_base);

# Getting a signing key

my $signing_key = uri_escape($consumer_secret) . "&" . uri_escape($oauth_token_secret);
my $signature = hmac_sha1_base64($signature_base,$signing_key);
while (length($signature) % 4) { $signature .= '='; }

# doc: https://dev.twitter.com/docs/auth/authorizing-request #################

my $header = "OAuth ";
$header .= uri_escape("oauth_consumer_key") . 
           '="' . 
           uri_escape($consumer_key) .
           '", ';
$header .= uri_escape("oauth_nonce") .        
           '="' .       
           uri_escape($nonce) .
           '", ';
$header .= uri_escape("oauth_signature") .        
           '="' .       
           uri_escape($signature) .
           '", ';
$header .= uri_escape("oauth_signature_method") .        
           '="' .       
           uri_escape($signature_method) .
           '", ';
$header .= uri_escape("oauth_timestamp") .        
           '="' .       
           uri_escape($timestamp) .
           '", ';
$header .= uri_escape("oauth_token") .        
           '="' .       
           uri_escape($token) .
           '", ';
$header .= uri_escape("oauth_version") .        
           '="' .       
           uri_escape($version) .
           '"';
system("/usr/bin/curl --connect-timeout 30 --request '$http_method' '$base_url' --data '$data' --header 'Authorization: $header'  --silent");

exit(0);
